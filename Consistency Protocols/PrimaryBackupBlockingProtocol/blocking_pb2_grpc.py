# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import blocking_pb2 as blocking__pb2


class RegistryServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterServer = channel.unary_unary(
                '/RegistryServer/RegisterServer',
                request_serializer=blocking__pb2.RegisterRequest.SerializeToString,
                response_deserializer=blocking__pb2.RegisterResponse.FromString,
                )
        self.GetServerList = channel.unary_unary(
                '/RegistryServer/GetServerList',
                request_serializer=blocking__pb2.ServerListRequest.SerializeToString,
                response_deserializer=blocking__pb2.ServerListResponse.FromString,
                )


class RegistryServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterServer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServerList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RegistryServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterServer': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterServer,
                    request_deserializer=blocking__pb2.RegisterRequest.FromString,
                    response_serializer=blocking__pb2.RegisterResponse.SerializeToString,
            ),
            'GetServerList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServerList,
                    request_deserializer=blocking__pb2.ServerListRequest.FromString,
                    response_serializer=blocking__pb2.ServerListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'RegistryServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RegistryServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RegistryServer/RegisterServer',
            blocking__pb2.RegisterRequest.SerializeToString,
            blocking__pb2.RegisterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServerList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RegistryServer/GetServerList',
            blocking__pb2.ServerListRequest.SerializeToString,
            blocking__pb2.ServerListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.WriteReq = channel.unary_unary(
                '/Server/WriteReq',
                request_serializer=blocking__pb2.WriteRequest.SerializeToString,
                response_deserializer=blocking__pb2.WriteResponse.FromString,
                )
        self.ReadReq = channel.unary_unary(
                '/Server/ReadReq',
                request_serializer=blocking__pb2.ReadRequest.SerializeToString,
                response_deserializer=blocking__pb2.ReadResponse.FromString,
                )
        self.DeleteReq = channel.unary_unary(
                '/Server/DeleteReq',
                request_serializer=blocking__pb2.DeleteRequest.SerializeToString,
                response_deserializer=blocking__pb2.DeleteResponse.FromString,
                )
        self.Write = channel.unary_unary(
                '/Server/Write',
                request_serializer=blocking__pb2.WriteRequest.SerializeToString,
                response_deserializer=blocking__pb2.WriteResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/Server/Delete',
                request_serializer=blocking__pb2.DeleteRequest.SerializeToString,
                response_deserializer=blocking__pb2.DeleteResponse.FromString,
                )
        self.Primary = channel.unary_unary(
                '/Server/Primary',
                request_serializer=blocking__pb2.PrimaryRequest.SerializeToString,
                response_deserializer=blocking__pb2.Confirmation.FromString,
                )


class ServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def WriteReq(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadReq(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteReq(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Write(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Primary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'WriteReq': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteReq,
                    request_deserializer=blocking__pb2.WriteRequest.FromString,
                    response_serializer=blocking__pb2.WriteResponse.SerializeToString,
            ),
            'ReadReq': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadReq,
                    request_deserializer=blocking__pb2.ReadRequest.FromString,
                    response_serializer=blocking__pb2.ReadResponse.SerializeToString,
            ),
            'DeleteReq': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteReq,
                    request_deserializer=blocking__pb2.DeleteRequest.FromString,
                    response_serializer=blocking__pb2.DeleteResponse.SerializeToString,
            ),
            'Write': grpc.unary_unary_rpc_method_handler(
                    servicer.Write,
                    request_deserializer=blocking__pb2.WriteRequest.FromString,
                    response_serializer=blocking__pb2.WriteResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=blocking__pb2.DeleteRequest.FromString,
                    response_serializer=blocking__pb2.DeleteResponse.SerializeToString,
            ),
            'Primary': grpc.unary_unary_rpc_method_handler(
                    servicer.Primary,
                    request_deserializer=blocking__pb2.PrimaryRequest.FromString,
                    response_serializer=blocking__pb2.Confirmation.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Server', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Server(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def WriteReq(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/WriteReq',
            blocking__pb2.WriteRequest.SerializeToString,
            blocking__pb2.WriteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadReq(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/ReadReq',
            blocking__pb2.ReadRequest.SerializeToString,
            blocking__pb2.ReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteReq(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/DeleteReq',
            blocking__pb2.DeleteRequest.SerializeToString,
            blocking__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Write(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/Write',
            blocking__pb2.WriteRequest.SerializeToString,
            blocking__pb2.WriteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/Delete',
            blocking__pb2.DeleteRequest.SerializeToString,
            blocking__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Primary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/Primary',
            blocking__pb2.PrimaryRequest.SerializeToString,
            blocking__pb2.Confirmation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
