# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import quorum_pb2 as quorum__pb2


class RegistryServerServicesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterReplica = channel.unary_unary(
                '/RegistryServerServices/RegisterReplica',
                request_serializer=quorum__pb2.RegisterReplicaRequest.SerializeToString,
                response_deserializer=quorum__pb2.RegisterReplicaResponse.FromString,
                )
        self.GetAllReplicas = channel.unary_unary(
                '/RegistryServerServices/GetAllReplicas',
                request_serializer=quorum__pb2.Empty.SerializeToString,
                response_deserializer=quorum__pb2.GetAllReplicasResponse.FromString,
                )
        self.GetReadReplicas = channel.unary_unary(
                '/RegistryServerServices/GetReadReplicas',
                request_serializer=quorum__pb2.Empty.SerializeToString,
                response_deserializer=quorum__pb2.GetReadReplicasResponse.FromString,
                )
        self.GetWriteReplicas = channel.unary_unary(
                '/RegistryServerServices/GetWriteReplicas',
                request_serializer=quorum__pb2.Empty.SerializeToString,
                response_deserializer=quorum__pb2.GetWriteReplicasResponse.FromString,
                )
        self.GetDeleteReplicas = channel.unary_unary(
                '/RegistryServerServices/GetDeleteReplicas',
                request_serializer=quorum__pb2.Empty.SerializeToString,
                response_deserializer=quorum__pb2.GetDeleteReplicasResponse.FromString,
                )


class RegistryServerServicesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterReplica(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllReplicas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReadReplicas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWriteReplicas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeleteReplicas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RegistryServerServicesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterReplica': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterReplica,
                    request_deserializer=quorum__pb2.RegisterReplicaRequest.FromString,
                    response_serializer=quorum__pb2.RegisterReplicaResponse.SerializeToString,
            ),
            'GetAllReplicas': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllReplicas,
                    request_deserializer=quorum__pb2.Empty.FromString,
                    response_serializer=quorum__pb2.GetAllReplicasResponse.SerializeToString,
            ),
            'GetReadReplicas': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReadReplicas,
                    request_deserializer=quorum__pb2.Empty.FromString,
                    response_serializer=quorum__pb2.GetReadReplicasResponse.SerializeToString,
            ),
            'GetWriteReplicas': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWriteReplicas,
                    request_deserializer=quorum__pb2.Empty.FromString,
                    response_serializer=quorum__pb2.GetWriteReplicasResponse.SerializeToString,
            ),
            'GetDeleteReplicas': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeleteReplicas,
                    request_deserializer=quorum__pb2.Empty.FromString,
                    response_serializer=quorum__pb2.GetDeleteReplicasResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'RegistryServerServices', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RegistryServerServices(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterReplica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RegistryServerServices/RegisterReplica',
            quorum__pb2.RegisterReplicaRequest.SerializeToString,
            quorum__pb2.RegisterReplicaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllReplicas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RegistryServerServices/GetAllReplicas',
            quorum__pb2.Empty.SerializeToString,
            quorum__pb2.GetAllReplicasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReadReplicas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RegistryServerServices/GetReadReplicas',
            quorum__pb2.Empty.SerializeToString,
            quorum__pb2.GetReadReplicasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWriteReplicas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RegistryServerServices/GetWriteReplicas',
            quorum__pb2.Empty.SerializeToString,
            quorum__pb2.GetWriteReplicasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeleteReplicas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RegistryServerServices/GetDeleteReplicas',
            quorum__pb2.Empty.SerializeToString,
            quorum__pb2.GetDeleteReplicasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ClientServicesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """


class ClientServicesServicer(object):
    """Missing associated documentation comment in .proto file."""


def add_ClientServicesServicer_to_server(servicer, server):
    rpc_method_handlers = {
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ClientServices', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ClientServices(object):
    """Missing associated documentation comment in .proto file."""


class ReplicaServerServicesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ReadFile = channel.unary_unary(
                '/ReplicaServerServices/ReadFile',
                request_serializer=quorum__pb2.ReadReplicaRequest.SerializeToString,
                response_deserializer=quorum__pb2.ReadReplicaResponse.FromString,
                )
        self.WriteFile = channel.unary_unary(
                '/ReplicaServerServices/WriteFile',
                request_serializer=quorum__pb2.WriteReplicaRequest.SerializeToString,
                response_deserializer=quorum__pb2.WriteReplicaResponse.FromString,
                )
        self.DeleteFile = channel.unary_unary(
                '/ReplicaServerServices/DeleteFile',
                request_serializer=quorum__pb2.DeleteReplicaRequest.SerializeToString,
                response_deserializer=quorum__pb2.DeleteReplicaResponse.FromString,
                )


class ReplicaServerServicesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ReadFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ReplicaServerServicesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ReadFile': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadFile,
                    request_deserializer=quorum__pb2.ReadReplicaRequest.FromString,
                    response_serializer=quorum__pb2.ReadReplicaResponse.SerializeToString,
            ),
            'WriteFile': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteFile,
                    request_deserializer=quorum__pb2.WriteReplicaRequest.FromString,
                    response_serializer=quorum__pb2.WriteReplicaResponse.SerializeToString,
            ),
            'DeleteFile': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFile,
                    request_deserializer=quorum__pb2.DeleteReplicaRequest.FromString,
                    response_serializer=quorum__pb2.DeleteReplicaResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ReplicaServerServices', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ReplicaServerServices(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ReadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ReplicaServerServices/ReadFile',
            quorum__pb2.ReadReplicaRequest.SerializeToString,
            quorum__pb2.ReadReplicaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ReplicaServerServices/WriteFile',
            quorum__pb2.WriteReplicaRequest.SerializeToString,
            quorum__pb2.WriteReplicaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ReplicaServerServices/DeleteFile',
            quorum__pb2.DeleteReplicaRequest.SerializeToString,
            quorum__pb2.DeleteReplicaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
